apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.metadata.namespace }}-chaincode
  namespace: {{ $.Values.metadata.namespace }}
  annotations:
    {{- if $.Values.annotations }}
    {{- range $key, $value := $.Values.annotations.service }}
    {{- range $k, $v := $value }}
      {{ $k }}: {{ $v | quote }}
    {{- end }}
    {{- end }}
    {{- end }} 
  labels:
    run: {{ .Values.metadata.namespace }}-chaincode
    app.kubernetes.io/name: {{ .Values.metadata.namespace }}-chaincode
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }} 
    {{- include "labels.custom" . | nindent 2 }}
spec:
  type: {{ $.Values.service.servicetype }}
  selector:
    app: external-chaincode
  ports:
  - protocol: TCP
    targetPort: 7052
    port: {{ $.Values.service.ports.chaincode.clusteripport }}
    {{- if  (ne $.Values.service.servicetype "ClusterIP") }}
    nodePort: {{ $.Values.service.ports.chaincode.nodeport }}
    {{- end }}
    name: grpc
  {{- if (eq $.Values.service.servicetype "ClusterIP") }}
  clusterIP: None
  {{- end }}
  
{{ if eq $.Values.proxy.provider "haproxy" }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.metadata.namespace }}-chaincode
  namespace: {{ $.Values.metadata.namespace }}
  annotations:
    kubernetes.io/ingress.class: "haproxy"
    ingress.kubernetes.io/ssl-passthrough: "true"  
spec:
  rules:
  - host: {{ .Values.metadata.namespace }}-chaincode.{{ $.Values.proxy.external_url_suffix }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Values.metadata.namespace }}-chaincode
            port:
              number: {{ $.Values.service.ports.chaincode.clusteripport }}
{{ end }}
